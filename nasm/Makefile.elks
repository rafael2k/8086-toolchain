# Unix fall-back makefile for the Netwide Assembler. For use if
# `configure' fails to generate a workable Makefile.
#
# If `configure' doesn't work for you, *please* inform
# <nasm-bugs@lists.sourceforge.net>
#
# The Netwide Assembler is copyright (C) 1996 Simon Tatham and
# Julian Hall. All rights reserved. The software is
# redistributable under the GNU Lesser General Public License.

# You may need to adjust these values.

prefix = /usr


ifeq ($(strip ${TOPDIR}),)
	TOPDIRE=/home/rafael2k/programs/devel/elks
else
	TOPDIRE=${TOPDIR}
endif

ifeq ($(strip ${WATCOM}),)
	WATCOMC=/usr/bin/watcom
else
	WATCOMC=${WATCOM}
endif

CC =  owcc -c -bnone -mcmodel=l -march=i86 -Os -std=c99 -fsigned-char -msoft-float -Wc,-zev -Wc,-zls -Wc,-x -fno-stack-check -fnostdlib -Wall -Wextra -Wc,-wcd=303 -I$(TOPDIRE)/libc/include -I$(TOPDIRE)/include -I$(TOPDIRE)/elks/include -I$(TOPDIRE)/libc/include/watcom -D__UNIX__ -D__ELKS__ -DOF_ONLY -DOF_BIN -DOF_AS86 -DOF_DEFAULT=of_as86
#CC = ia16-elf-gcc -mcmodel=small -std=c11 -melks-libc -mtune=i8086 -Wall -Os -mno-segment-relocation-stuff -fno-inline -fno-builtin-printf -Wno-implicit-int -Wno-parentheses  -I/home/rafael2k/programs/devel/elks/libc/include -I/home/rafael2k/programs/devel/elks/elks/include -D__ELKS__
LINK = owcc -bos2 -s -Wl,option -Wl,start=_start -Wl,option -Wl,dosseg -Wl,option -Wl,nodefaultlibs -Wl,option -Wl,stack=0x1000 -Wl,option -Wl,heapsize=256 -Wl,library -Wl,$(TOPDIRE)/libc/libcl.lib

CFLAGS = -I.
PERL = perl
MKDIR_P = mkdir -p
BINDIR=../elks-bin

INSTALL = install -c
INSTALL_PROGRAM = $(INSTALL)
INSTALL_DATA = $(INSTALL) -m 644

exec_prefix = $(prefix)
bindir = $(exec_prefix)/bin
mandir = $(prefix)/man

# You _shouldn't_ need to adjust anything below this line.

.SUFFIXES: .c .obj .h .mac .pl

%.obj: %.c
	$(CC) -c $(CFLAGS) -o $@ $^

NASM = nasm.obj nasmlib.obj float.obj insnsa.obj assemble.obj labels.obj \
	parser.obj outform.obj outbin.obj outaout.obj \
	outcoff.obj outelf.obj \
	outobj.obj outas86.obj outdbg.obj preproc.obj listing.obj \
	eval.obj outrdf2.obj outieee.obj mem.obj

NDISASM = ndisasm.obj disasm.obj sync.obj nasmlib.obj insnsd.obj

all: $(BINDIR)/nasm86

$(BINDIR)/nasm86: $(NASM)
	$(LINK) -o $(BINDIR)/nasm86 $(NASM)

$(BINDIR)/ndisasm16: $(NDISASM)
	$(LINK) -o $(BINDIR)/ndisasm16 $(NDISASM)

directory:
	$(MKDIR_P) $(BINDIR)

# These files contains all the standard macros that are derived from
# the version number.
version.h: version version.pl
	$(PERL) version.pl h < version > version.h

version.mac: version version.pl
	$(PERL) version.pl mac < version > version.mac

# This source file is generated from the standard macros file
# `standard.mac' by another Perl script. Again, it's part of the
# standard distribution.

macros.c: macros.pl standard.mac version.mac
	$(PERL) macros.pl standard.mac version.mac

insnsa.c: insns.pl insns.dat
	$(PERL) insns.pl -a insns.dat

insnsd.c: insns.pl insns.dat
	$(PERL) insns.pl -d insns.dat

insnsi.h: insns.pl insns.dat
	$(PERL) insns.pl -i insns.dat

insnsn.c: insns.pl insns.dat
	$(PERL) insns.pl -n insns.dat

# These source files are generated from regs.dat by yet another
# perl script.
regs.c: regs.dat regs.pl
	$(PERL) regs.pl c regs.dat > regs.c
regflags.c: regs.dat regs.pl
	$(PERL) regs.pl fc regs.dat > regflags.c
regdis.c: regs.dat regs.pl
	$(PERL) regs.pl dc regs.dat > regdis.c
regvals.c: regs.dat regs.pl
	$(PERL) regs.pl vc regs.dat > regvals.c
regs.h: regs.dat regs.pl
	$(PERL) regs.pl h regs.dat > regs.h

# This target generates all files that require perl.
# This allows easier generation of distribution (see dist target).
PERLREQ = macros.c insnsa.c insnsd.c insnsi.h insnsn.c \
	  regs.c regs.h regflags.c regdis.c regvals.c \
	  version.h version.mac 
perlreq: $(PERLREQ)

#install: nasm ndisasm
#	$(INSTALL_PROGRAM) nasm $(bindir)/nasm
#	$(INSTALL_PROGRAM) ndisasm $(bindir)/ndisasm
#	$(INSTALL_DATA) nasm.1 $(mandir)/man1/nasm.1
#	$(INSTALL_DATA) ndisasm.1 $(mandir)/man1/ndisasm.1

clean:
	rm -f *.obj $(BINDIR)/nasm86
	$(MAKE) -C rdoff clean

rdf:
	$(MAKE) -C rdoff

rdf_install install_rdf:
	$(MAKE) -C rdoff install
