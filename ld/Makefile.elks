# LD86 Makefile for ELKS using OpenWatcom C

############# Standard Section for Open Watcom C ##############
ifndef TOPDIR
$(error ELKS TOPDIR is not defined)
endif

ifndef WATCOM
$(error OpenWatcom WATCOM is not defined)
endif

CC = owcc
LD = owcc
CLBASE = -mcmodel=l
CLBASE += -bnone -march=i86 -std=c99 -fsigned-char -msoft-float
CLBASE += -fno-stack-check -fnostdlib
CLBASE += -Wc,-zev -Wc,-zls -Wc,-x -Wc,-wcd=303
WARNINGS = -Wall -Wextra
INCLUDES = -I$(TOPDIR)/libc/include -I$(TOPDIR)/elks/include
INCLUDES += -I$(TOPDIR)/libc/include/watcom
DEFINES = -D__ELKS__
CFLAGS = -Os $(CLBASE) $(WARNINGS) $(INCLUDES) $(DEFINES) $(LOCALFLAGS)
LDBASE = -bos2 -s
LDBASE += -Wl,option -Wl,dosseg
LDBASE += -Wl,option -Wl,start=_start
LDBASE += -Wl,option -Wl,nodefaultlibs
LDBASE += -Wl,option -Wl,stack=0x1000
LDBASE += -Wl,option -Wl,heapsize=0x4000
LDFLAGS = $(LDBASE)
LDLIBS = -Wl,library -Wl,$(TOPDIR)/libc/libc.lib

OBJS = $(SRCS:.c=.obj)
%.obj: %.c
	$(CC) -c $(CFLAGS) -o $*.obj $<

############# End of Standard Section ##############

# Will need some of these if you want native executables on non-Linux/i386
# -DDETECTAOUT			# Turn on detection.
# -DV7_A_OUT			# a.out.h is like V7
# -DBSD_A_OUT			# a.out.h is like BSD
# -DSTANDARD_GNU_A_OUT		# a.out.h is like GNU normal.
# -DREL_OUTPUT -DBUGCOMPAT	# -r Produces weird *.o files.
#
# An alternative file for a non-standard a.out.h (eg i386 linux on an Alpha)
# NATIVE=-DA_OUT_INCL='"a_out_local.h"' 
#DEFINES += -DREL_OUTPUT -DREL_NATIVE
#SRCS += writebin.c writeemu.c

BINDIR = ../elks-bin
LOCALFLAGS =
PROG = $(BINDIR)/ld $(BINDIR)/objdump
SRCS = dumps.c io.c ld.c readobj.c table.c typeconv.c linksyms.c mkar.c \
      writex86.c

all: $(PROG)

$(BINDIR)/ld: $(OBJS)
	$(LD) $(LDFLAGS) -o $@ $^ $(LDLIBS)

$(BINDIR)/objdump: objdump86.obj
	$(LD) $(LDFLAGS) -o $@ $^ $(LDLIBS)

clean:
	rm -f $(PROG) *.obj
